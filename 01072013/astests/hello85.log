Start of pass one

src:         title   $Id: hello85.asm,v 1.3 2011/04/14 15:18:43 doug Exp $
label[0] g_szOpcode[5] g_szParms[53] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: hello85.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: ; Revision 1.3  2011/04/14 15:18:43  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; added E5 byte to check end of .com conversion
label[0] g_szOpcode[0] g_szParms[0] comments[47]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 	radix	decimal
label[0] g_szOpcode[5] g_szParms[7] comments[0]
Processing RADIX directive

src: 	include	assemble.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: assemble.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: TRUE	equ8	1
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: FALSE	equ8	0
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ; eof - assemble.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ;;;;;;;;;;;;;;;;;;;;;; 
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: 	include	cpm80.inc
label[0] g_szOpcode[7] g_szParms[9] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: cpm80.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[21]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: bdos	equ16	5
label[4] g_szOpcode[5] g_szParms[1] comments[0]
Processing EQU16 directive

src: conin	equ8	1
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: conout	equ8	2
label[6] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: prt	equ8	9
label[3] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: term	equ8	0
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ; eof - cpm80.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	binary	TRUE
label[0] g_szOpcode[6] g_szParms[4] comments[0]
Processing BINARY directive

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	org	100
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing ORG directive

src: 	segment	code
label[0] g_szOpcode[7] g_szParms[4] comments[0]
Processing SEGMENT directive

src: start	lxi	sp,stktop
label[5] g_szOpcode[3] g_szParms[9] comments[0]
Processing 8085 LXI g_szOpcode

src: 	mvi	c,prt
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing 8085 MVI g_szOpcode

src: 	lxi	d,msg
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing 8085 LXI g_szOpcode

src: 	call	bdos
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing 8085 CALL g_szOpcode

src: 	mvi	c,term
label[0] g_szOpcode[3] g_szParms[6] comments[0]
Processing 8085 MVI g_szOpcode

src: 	jmp	bdos
label[0] g_szOpcode[3] g_szParms[4] comments[0]
Processing 8085 JMP g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	segment	data
label[0] g_szOpcode[7] g_szParms[4] comments[0]
Processing SEGMENT directive

src: msg	dstr	Hello World!!$
label[3] g_szOpcode[4] g_szParms[14] comments[0]
Processing DSTR directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	segment	stack
label[0] g_szOpcode[7] g_szParms[5] comments[0]
Processing SEGMENT directive

src: 	rw	64
label[0] g_szOpcode[2] g_szParms[2] comments[0]
Processing RW directive

src: stktop	db	0E5
label[6] g_szOpcode[2] g_szParms[3] comments[0]
Processing DB directive
ucTemp is 0xE5

src: 	end	start
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing END directive
End of pass one
Start of pass two

src:         title   $Id: hello85.asm,v 1.3 2011/04/14 15:18:43 doug Exp $
label[0] g_szOpcode[5] g_szParms[53] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: hello85.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: ; Revision 1.3  2011/04/14 15:18:43  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; added E5 byte to check end of .com conversion
label[0] g_szOpcode[0] g_szParms[0] comments[47]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 	radix	decimal
label[0] g_szOpcode[5] g_szParms[7] comments[0]
Processing RADIX directive

src: 	include	assemble.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: assemble.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: TRUE	equ8	1
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: FALSE	equ8	0
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ; eof - assemble.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ;;;;;;;;;;;;;;;;;;;;;; 
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: 	include	cpm80.inc
label[0] g_szOpcode[7] g_szParms[9] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: cpm80.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[21]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: bdos	equ16	5
label[4] g_szOpcode[5] g_szParms[1] comments[0]
Processing EQU16 directive

src: conin	equ8	1
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: conout	equ8	2
label[6] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: prt	equ8	9
label[3] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: term	equ8	0
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ; eof - cpm80.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	binary	TRUE
label[0] g_szOpcode[6] g_szParms[4] comments[0]
Processing BINARY directive

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	org	100
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing ORG directive

src: 	segment	code
label[0] g_szOpcode[7] g_szParms[4] comments[0]
Processing SEGMENT directive

src: start	lxi	sp,stktop
label[5] g_szOpcode[3] g_szParms[9] comments[0]
Processing 8085 LXI g_szOpcode
hexout(pc=0100,count=3,offset=0); called

src: 	mvi	c,prt
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing 8085 MVI g_szOpcode
hexout(pc=0103,count=2,offset=0); called

src: 	lxi	d,msg
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing 8085 LXI g_szOpcode
hexout(pc=0105,count=3,offset=0); called

src: 	call	bdos
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing 8085 CALL g_szOpcode
hexout(pc=0108,count=3,offset=0); called

src: 	mvi	c,term
label[0] g_szOpcode[3] g_szParms[6] comments[0]
Processing 8085 MVI g_szOpcode
hexout(pc=010B,count=2,offset=0); called

src: 	jmp	bdos
label[0] g_szOpcode[3] g_szParms[4] comments[0]
Processing 8085 JMP g_szOpcode
hexout(pc=010D,count=3,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	segment	data
label[0] g_szOpcode[7] g_szParms[4] comments[0]
Processing SEGMENT directive

src: msg	dstr	Hello World!!$
label[3] g_szOpcode[4] g_szParms[14] comments[0]
Processing DSTR directive
hexout(pc=0110,count=3,offset=0); called
hexout(pc=0113,count=3,offset=3); called
hexout(pc=0116,count=3,offset=6); called
hexout(pc=0119,count=3,offset=9); called
hexout(pc=011C,count=2,offset=12); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	segment	stack
label[0] g_szOpcode[7] g_szParms[5] comments[0]
Processing SEGMENT directive

src: 	rw	64
label[0] g_szOpcode[2] g_szParms[2] comments[0]
Processing RW directive
hexout(pc=011E,count=3,offset=0); called
hexout(pc=0121,count=3,offset=3); called
hexout(pc=0124,count=3,offset=6); called
hexout(pc=0127,count=3,offset=9); called
hexout(pc=012A,count=3,offset=12); called
hexout(pc=012D,count=3,offset=15); called
hexout(pc=0130,count=3,offset=18); called
hexout(pc=0133,count=3,offset=21); called
hexout(pc=0136,count=3,offset=24); called
hexout(pc=0139,count=3,offset=27); called
hexout(pc=013C,count=3,offset=30); called
hexout(pc=013F,count=3,offset=33); called
hexout(pc=0142,count=3,offset=36); called
hexout(pc=0145,count=3,offset=39); called
hexout(pc=0148,count=3,offset=42); called
hexout(pc=014B,count=3,offset=45); called
hexout(pc=014E,count=3,offset=48); called
hexout(pc=0151,count=3,offset=51); called
hexout(pc=0154,count=3,offset=54); called
hexout(pc=0157,count=3,offset=57); called
hexout(pc=015A,count=3,offset=60); called
hexout(pc=015D,count=3,offset=63); called
hexout(pc=0160,count=3,offset=66); called
hexout(pc=0163,count=3,offset=69); called
hexout(pc=0166,count=3,offset=72); called
hexout(pc=0169,count=3,offset=75); called
hexout(pc=016C,count=3,offset=78); called
hexout(pc=016F,count=3,offset=81); called
hexout(pc=0172,count=3,offset=84); called
hexout(pc=0175,count=3,offset=87); called
hexout(pc=0178,count=3,offset=90); called
hexout(pc=017B,count=3,offset=93); called
hexout(pc=017E,count=3,offset=96); called
hexout(pc=0181,count=3,offset=99); called
hexout(pc=0184,count=3,offset=102); called
hexout(pc=0187,count=3,offset=105); called
hexout(pc=018A,count=3,offset=108); called
hexout(pc=018D,count=3,offset=111); called
hexout(pc=0190,count=3,offset=114); called
hexout(pc=0193,count=3,offset=117); called
hexout(pc=0196,count=3,offset=120); called
hexout(pc=0199,count=3,offset=123); called
hexout(pc=019C,count=3,offset=126); called
hexout(pc=019F,count=3,offset=129); called
hexout(pc=01A2,count=3,offset=132); called
hexout(pc=01A5,count=3,offset=135); called
hexout(pc=01A8,count=3,offset=138); called
hexout(pc=01AB,count=3,offset=141); called
hexout(pc=01AE,count=3,offset=144); called
hexout(pc=01B1,count=3,offset=147); called
hexout(pc=01B4,count=3,offset=150); called
hexout(pc=01B7,count=3,offset=153); called
hexout(pc=01BA,count=3,offset=156); called
hexout(pc=01BD,count=3,offset=159); called
hexout(pc=01C0,count=3,offset=162); called
hexout(pc=01C3,count=3,offset=165); called
hexout(pc=01C6,count=3,offset=168); called
hexout(pc=01C9,count=3,offset=171); called
hexout(pc=01CC,count=3,offset=174); called
hexout(pc=01CF,count=3,offset=177); called
hexout(pc=01D2,count=3,offset=180); called
hexout(pc=01D5,count=3,offset=183); called
hexout(pc=01D8,count=3,offset=186); called
hexout(pc=01DB,count=3,offset=189); called
hexout(pc=01DE,count=3,offset=192); called
hexout(pc=01E1,count=3,offset=195); called
hexout(pc=01E4,count=2,offset=198); called

src: stktop	db	0E5
label[6] g_szOpcode[2] g_szParms[3] comments[0]
Processing DB directive
ucTemp is 0xE5
hexout(pc=01E6,count=1,offset=0); called

src: 	end	start
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing END directive
hexout(pc=01E7,count=2,offset=0); called
End of pass two
