A Readme about the bindefs.hpp file and limitations
in the c and c++ languages.

Although hexadecimal literals can be written as 0xE5
and so on. What is notably missing is a similar syntax
for defining binary literal.

To solve this problem, I wrote a program called mkbindefs.cpp
which generates an include file containing 256 macro definitions
which allow the coder to define literals in binary.

We would have expected to see something like 0b01010101 but the
leading zero is problematic. Instead my syntax uses a capital
letter O which look much like a zero but is a fine leading
character for a macro label.

Macros such as:

#define Ox00010001 0x10

allow a program to inclkude the bindefs.hpp file then use binary
literals coded as above, and everything works as expected.

To keep the include file from cluttering up the symbol table
unnecessarily, the contents are guarded by an ifdef as so...

// bindefs.hpp
#ifdef BINDEFS
#define O00000000 0x00
...
#define O11111111 0xFF
#endif

To use the include, do as follows...

#define BINDEF
#include "bindefs.hpp"

Have fun...

Douglas W. Goodall
doug@goodall.com
 
