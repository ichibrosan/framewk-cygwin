Start of pass one

src: 	typesrc	1
label[0] g_szOpcode[7] g_szParms[1] comments[0]
Processing TYPESRC directive

src: 	title   $Id: testdirs.asm,v 1.2 2011/04/03 05:25:48 doug Exp $
label[0] g_szOpcode[5] g_szParms[54] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testdirs.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.2  2011/04/03 05:25:48  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; test for multiple parms on db dw dd and dq and typesrc
label[0] g_szOpcode[0] g_szParms[0] comments[56]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/04/03 05:20:36  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: 	include	assemble.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: assemble.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: TRUE	equ8	1
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: FALSE	equ8	0
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ; eof - assemble.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ;;;;;;;;;;;;;;;;;;;;;; 
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: 	listincl FALSE
label[0] g_szOpcode[8] g_szParms[5] comments[0]
Processing LISTINCL directive

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	listincl TRUE
label[0] g_szOpcode[8] g_szParms[4] comments[0]
Processing LISTINCL directive

src: 	include cpm80.inc
label[0] g_szOpcode[7] g_szParms[9] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: cpm80.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[21]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: bdos	equ16	5
label[4] g_szOpcode[5] g_szParms[1] comments[0]
Processing EQU16 directive

src: conin	equ8	1
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: conout	equ8	2
label[6] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: prt	equ8	9
label[3] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: term	equ8	0
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ; eof - cpm80.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; ask for binary file
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 	binary	 TRUE
label[0] g_szOpcode[6] g_szParms[4] comments[0]
Processing BINARY directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; save symbols
label[0] g_szOpcode[0] g_szParms[0] comments[12]

src: 	savesyms TRUE
label[0] g_szOpcode[8] g_szParms[4] comments[0]
Processing SAVESYMS directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; use 8085 opcodes
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; default to hex for numeric literals
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: byte	equ8	12
label[4] g_szOpcode[4] g_szParms[2] comments[0]
Processing EQU8 directive

src: word	equ16	1234
label[4] g_szOpcode[5] g_szParms[4] comments[0]
Processing EQU16 directive

src: dword	equ32	12345678
label[5] g_szOpcode[5] g_szParms[8] comments[0]
Processing EQU32 directive

src: qword	equ64	0123456789ABCDEF
label[5] g_szOpcode[5] g_szParms[16] comments[0]
Processing EQU64 directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; test the new support for multiple 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: 	;   parms in db, dw, dd and dq
label[0] g_szOpcode[0] g_szParms[0] comments[26]

src: 	db	byte
label[0] g_szOpcode[2] g_szParms[4] comments[0]
Processing DB directive
ucTemp is 0x12

src: 	db	byte,byte
label[0] g_szOpcode[2] g_szParms[9] comments[0]
Processing DB directive

src: 	db	byte,byte,byte
label[0] g_szOpcode[2] g_szParms[14] comments[0]
Processing DB directive

src: 	db	byte,byte,byte,byte
label[0] g_szOpcode[2] g_szParms[19] comments[0]
Processing DB directive

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dw	word
label[0] g_szOpcode[2] g_szParms[4] comments[0]
Processing DW directive
uiTemp is 0x1234

src: 	dw	word,word
label[0] g_szOpcode[2] g_szParms[9] comments[0]
Processing DW directive

src: 	dw	word,word,word
label[0] g_szOpcode[2] g_szParms[14] comments[0]
Processing DW directive

src: 	dw	word,word,word,word
label[0] g_szOpcode[2] g_szParms[19] comments[0]
Processing DW directive

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dd	dword
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing DD directive

src: 	dd	dword,dword
label[0] g_szOpcode[2] g_szParms[11] comments[0]
Processing DD directive

src: 	dd	dword,dword,dword
label[0] g_szOpcode[2] g_szParms[17] comments[0]
Processing DD directive

src: 	dd	dword,dword,dword,dword
label[0] g_szOpcode[2] g_szParms[23] comments[0]
Processing DD directive

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dq	qword
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing DQ directive

src: 	dq	qword,qword
label[0] g_szOpcode[2] g_szParms[11] comments[0]
Processing DQ directive

src: 	dq	qword,qword,qword
label[0] g_szOpcode[2] g_szParms[17] comments[0]
Processing DQ directive

src: 	dq	qword,qword,qword,qword
label[0] g_szOpcode[2] g_szParms[23] comments[0]
Processing DQ directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end
label[0] g_szOpcode[3] g_szParms[0] comments[0]
Processing END directive
End of pass one
Start of pass two

src: 	typesrc	1
label[0] g_szOpcode[7] g_szParms[1] comments[0]
Processing TYPESRC directive

src: 	title   $Id: testdirs.asm,v 1.2 2011/04/03 05:25:48 doug Exp $
label[0] g_szOpcode[5] g_szParms[54] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testdirs.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.2  2011/04/03 05:25:48  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; test for multiple parms on db dw dd and dq and typesrc
label[0] g_szOpcode[0] g_szParms[0] comments[56]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/04/03 05:20:36  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: 	include	assemble.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: assemble.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: TRUE	equ8	1
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: FALSE	equ8	0
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ; eof - assemble.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[22]

src: ;;;;;;;;;;;;;;;;;;;;;; 
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: 	listincl FALSE
label[0] g_szOpcode[8] g_szParms[5] comments[0]
Processing LISTINCL directive

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	listincl TRUE
label[0] g_szOpcode[8] g_szParms[4] comments[0]
Processing LISTINCL directive

src: 	include cpm80.inc
label[0] g_szOpcode[7] g_szParms[9] comments[0]
Processing INCLUDE directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: cpm80.inc,v $
label[0] g_szOpcode[0] g_szParms[0] comments[21]

src: ; Revision 1.1  2011/03/25 08:43:19  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: bdos	equ16	5
label[4] g_szOpcode[5] g_szParms[1] comments[0]
Processing EQU16 directive

src: conin	equ8	1
label[5] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: conout	equ8	2
label[6] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: prt	equ8	9
label[3] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: term	equ8	0
label[4] g_szOpcode[4] g_szParms[1] comments[0]
Processing EQU8 directive

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ; eof - cpm80.inc ;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: ;;;;;;;;;;;;;;;;;;;
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; ask for binary file
label[0] g_szOpcode[0] g_szParms[0] comments[19]

src: 	binary	 TRUE
label[0] g_szOpcode[6] g_szParms[4] comments[0]
Processing BINARY directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; save symbols
label[0] g_szOpcode[0] g_szParms[0] comments[12]

src: 	savesyms TRUE
label[0] g_szOpcode[8] g_szParms[4] comments[0]
Processing SAVESYMS directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; use 8085 opcodes
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; default to hex for numeric literals
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: byte	equ8	12
label[4] g_szOpcode[4] g_szParms[2] comments[0]
Processing EQU8 directive

src: word	equ16	1234
label[4] g_szOpcode[5] g_szParms[4] comments[0]
Processing EQU16 directive

src: dword	equ32	12345678
label[5] g_szOpcode[5] g_szParms[8] comments[0]
Processing EQU32 directive

src: qword	equ64	0123456789ABCDEF
label[5] g_szOpcode[5] g_szParms[16] comments[0]
Processing EQU64 directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	; test the new support for multiple 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: 	;   parms in db, dw, dd and dq
label[0] g_szOpcode[0] g_szParms[0] comments[26]

src: 	db	byte
label[0] g_szOpcode[2] g_szParms[4] comments[0]
Processing DB directive
ucTemp is 0x12
hexout(pc=0000,count=1,offset=0); called

src: 	db	byte,byte
label[0] g_szOpcode[2] g_szParms[9] comments[0]
Processing DB directive
hexout(pc=0001,count=2,offset=0); called

src: 	db	byte,byte,byte
label[0] g_szOpcode[2] g_szParms[14] comments[0]
Processing DB directive
hexout(pc=0003,count=3,offset=0); called

src: 	db	byte,byte,byte,byte
label[0] g_szOpcode[2] g_szParms[19] comments[0]
Processing DB directive
hexout(pc=0006,count=3,offset=0); called
hexout(pc=0009,count=1,offset=3); called

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dw	word
label[0] g_szOpcode[2] g_szParms[4] comments[0]
Processing DW directive
uiTemp is 0x1234
hexout(pc=000A,count=2,offset=0); called

src: 	dw	word,word
label[0] g_szOpcode[2] g_szParms[9] comments[0]
Processing DW directive
hexout(pc=000C,count=3,offset=0); called
hexout(pc=000F,count=1,offset=3); called

src: 	dw	word,word,word
label[0] g_szOpcode[2] g_szParms[14] comments[0]
Processing DW directive
hexout(pc=0010,count=3,offset=0); called
hexout(pc=0013,count=3,offset=3); called

src: 	dw	word,word,word,word
label[0] g_szOpcode[2] g_szParms[19] comments[0]
Processing DW directive
hexout(pc=0016,count=3,offset=0); called
hexout(pc=0019,count=3,offset=3); called
hexout(pc=001C,count=2,offset=6); called

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dd	dword
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing DD directive
hexout(pc=001E,count=3,offset=0); called
hexout(pc=0021,count=1,offset=3); called

src: 	dd	dword,dword
label[0] g_szOpcode[2] g_szParms[11] comments[0]
Processing DD directive
hexout(pc=0022,count=3,offset=0); called
hexout(pc=0025,count=3,offset=3); called
hexout(pc=0028,count=2,offset=6); called

src: 	dd	dword,dword,dword
label[0] g_szOpcode[2] g_szParms[17] comments[0]
Processing DD directive
hexout(pc=002A,count=3,offset=0); called
hexout(pc=002D,count=3,offset=3); called
hexout(pc=0030,count=3,offset=6); called
hexout(pc=0033,count=3,offset=9); called

src: 	dd	dword,dword,dword,dword
label[0] g_szOpcode[2] g_szParms[23] comments[0]
Processing DD directive
hexout(pc=0036,count=3,offset=0); called
hexout(pc=0039,count=3,offset=3); called
hexout(pc=003C,count=3,offset=6); called
hexout(pc=003F,count=3,offset=9); called
hexout(pc=0042,count=3,offset=12); called
hexout(pc=0045,count=1,offset=15); called

src: 	;
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	dq	qword
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing DQ directive
hexout(pc=0046,count=3,offset=0); called
hexout(pc=0049,count=3,offset=3); called
hexout(pc=004C,count=2,offset=6); called

src: 	dq	qword,qword
label[0] g_szOpcode[2] g_szParms[11] comments[0]
Processing DQ directive
hexout(pc=004E,count=3,offset=0); called
hexout(pc=0051,count=3,offset=3); called
hexout(pc=0054,count=3,offset=6); called
hexout(pc=0057,count=3,offset=9); called
hexout(pc=005A,count=3,offset=12); called
hexout(pc=005D,count=1,offset=15); called

src: 	dq	qword,qword,qword
label[0] g_szOpcode[2] g_szParms[17] comments[0]
Processing DQ directive
hexout(pc=005E,count=3,offset=0); called
hexout(pc=0061,count=3,offset=3); called
hexout(pc=0064,count=3,offset=6); called
hexout(pc=0067,count=3,offset=9); called
hexout(pc=006A,count=3,offset=12); called
hexout(pc=006D,count=3,offset=15); called
hexout(pc=0070,count=3,offset=18); called
hexout(pc=0073,count=3,offset=21); called

src: 	dq	qword,qword,qword,qword
label[0] g_szOpcode[2] g_szParms[23] comments[0]
Processing DQ directive
hexout(pc=0076,count=3,offset=0); called
hexout(pc=0079,count=3,offset=3); called
hexout(pc=007C,count=3,offset=6); called
hexout(pc=007F,count=3,offset=9); called
hexout(pc=0082,count=3,offset=12); called
hexout(pc=0085,count=3,offset=15); called
hexout(pc=0088,count=3,offset=18); called
hexout(pc=008B,count=3,offset=21); called
hexout(pc=008E,count=3,offset=24); called
hexout(pc=0091,count=3,offset=27); called
hexout(pc=0094,count=2,offset=30); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end
label[0] g_szOpcode[3] g_szParms[0] comments[0]
Processing END directive
End of pass two
