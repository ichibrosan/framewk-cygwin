Start of pass one

src:         title   $Id: testz8ld.asm,v 1.2 2011/03/25 09:01:21 doug Exp $
label[0] g_szOpcode[5] g_szParms[54] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testz8ld.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	proc	z80
label[0] g_szOpcode[4] g_szParms[3] comments[0]
Processing PROC directive

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 	org	100
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing ORG directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: value8	equ8	0E5
label[6] g_szOpcode[4] g_szParms[3] comments[0]
Processing EQU8 directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: start	nop
label[5] g_szOpcode[3] g_szParms[0] comments[0]
Processing 8085 NOP g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	ld	a,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,A

src: 	ld	a,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,B

src: 	ld	a,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,C

src: 	ld	a,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,D

src: 	ld	a,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,E

src: 	ld	a,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,H

src: 	ld	a,i
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,I

src: 	ld	a,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,L

src: 	ld	a,r
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,R

src: 	ld	a,(bc)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(BC)

src: 	ld	a,(de)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(DE)

src: 	ld	a,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(HL)

src: 	ld	b,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,A

src: 	ld	b,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,B

src: 	ld	b,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,C

src: 	ld	b,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,D

src: 	ld	b,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,E

src: 	ld	b,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,H

src: 	ld	b,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,L

src: 	ld	b,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = B,(HL)

src: 	ld	c,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,A

src: 	ld	c,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,B

src: 	ld	c,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,C

src: 	ld	c,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,D

src: 	ld	c,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,E

src: 	ld	c,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,H

src: 	ld	c,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,L

src: 	ld	c,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = C,(HL)

src: 	ld	d,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,A

src: 	ld	d,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,B

src: 	ld	d,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,C

src: 	ld	d,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,D

src: 	ld	d,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,E

src: 	ld	d,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,H

src: 	ld	d,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,L

src: 	ld	d,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = D,(HL)

src: 	ld	e,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,A

src: 	ld	e,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,B

src: 	ld	e,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,C

src: 	ld	e,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,D

src: 	ld	e,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,E

src: 	ld	e,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,H

src: 	ld	e,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,L

src: 	ld	e,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = E,(HL)

src: 	ld	h,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,A

src: 	ld	h,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,B

src: 	ld	h,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,C

src: 	ld	h,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,D

src: 	ld	h,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,E

src: 	ld	h,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,H

src: 	ld	h,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,L

src: 	ld	h,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = H,(HL)

src: 	ld	i,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = I,A

src: 	ld	l,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,A

src: 	ld	l,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,B

src: 	ld	l,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,C

src: 	ld	l,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,D

src: 	ld	l,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,E

src: 	ld	l,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,H

src: 	ld	l,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,L

src: 	ld	l,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = L,(HL)

src: 	ld	r,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = R,A

src: 	ld	sp,hl
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing LD g_szOpcode
szLDtemp = SP,HL

src: 	ld	b,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = B,VALUE8

src: 	ld	c,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = C,VALUE8

src: 	ld	d,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = D,VALUE8

src: 	ld	e,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = E,VALUE8

src: 	ld	h,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = H,VALUE8

src: 	ld	l,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = L,VALUE8

src: 	ld	a,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = A,VALUE8

src: 	ld	(hl),b
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),B

src: 	ld	(hl),c
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),C

src: 	ld	(hl),d
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),D

src: 	ld	(hl),e
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),E

src: 	ld	(hl),h
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),H

src: 	ld	(hl),l
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),L

src: 	ld	(hl),a
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),A
proc ld (HL),A

src: 	
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end	start
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing END directive
End of pass one
Start of pass two

src:         title   $Id: testz8ld.asm,v 1.2 2011/03/25 09:01:21 doug Exp $
label[0] g_szOpcode[5] g_szParms[54] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testz8ld.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[24]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	proc	z80
label[0] g_szOpcode[4] g_szParms[3] comments[0]
Processing PROC directive

src: 	radix	hex
label[0] g_szOpcode[5] g_szParms[3] comments[0]
Processing RADIX directive

src: 	org	100
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing ORG directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: value8	equ8	0E5
label[6] g_szOpcode[4] g_szParms[3] comments[0]
Processing EQU8 directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: start	nop
label[5] g_szOpcode[3] g_szParms[0] comments[0]
Processing 8085 NOP g_szOpcode
hexout(pc=0100,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	ld	a,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,A
hexout(pc=0101,count=1,offset=0); called

src: 	ld	a,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,B
hexout(pc=0102,count=1,offset=0); called

src: 	ld	a,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,C
hexout(pc=0103,count=1,offset=0); called

src: 	ld	a,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,D
hexout(pc=0104,count=1,offset=0); called

src: 	ld	a,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,E
hexout(pc=0105,count=1,offset=0); called

src: 	ld	a,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,H
hexout(pc=0106,count=1,offset=0); called

src: 	ld	a,i
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,I
hexout(pc=0107,count=2,offset=0); called

src: 	ld	a,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,L
hexout(pc=0109,count=1,offset=0); called

src: 	ld	a,r
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = A,R
hexout(pc=010A,count=2,offset=0); called

src: 	ld	a,(bc)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(BC)
hexout(pc=010C,count=1,offset=0); called

src: 	ld	a,(de)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(DE)
hexout(pc=010D,count=1,offset=0); called

src: 	ld	a,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = A,(HL)
hexout(pc=010E,count=1,offset=0); called

src: 	ld	b,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,A
hexout(pc=010F,count=1,offset=0); called

src: 	ld	b,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,B
hexout(pc=0110,count=1,offset=0); called

src: 	ld	b,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,C
hexout(pc=0111,count=1,offset=0); called

src: 	ld	b,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,D
hexout(pc=0112,count=1,offset=0); called

src: 	ld	b,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,E
hexout(pc=0113,count=1,offset=0); called

src: 	ld	b,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,H
hexout(pc=0114,count=1,offset=0); called

src: 	ld	b,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = B,L
hexout(pc=0115,count=1,offset=0); called

src: 	ld	b,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = B,(HL)
hexout(pc=0116,count=1,offset=0); called

src: 	ld	c,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,A
hexout(pc=0117,count=1,offset=0); called

src: 	ld	c,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,B
hexout(pc=0118,count=1,offset=0); called

src: 	ld	c,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,C
hexout(pc=0119,count=1,offset=0); called

src: 	ld	c,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,D
hexout(pc=011A,count=1,offset=0); called

src: 	ld	c,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,E
hexout(pc=011B,count=1,offset=0); called

src: 	ld	c,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,H
hexout(pc=011C,count=1,offset=0); called

src: 	ld	c,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = C,L
hexout(pc=011D,count=1,offset=0); called

src: 	ld	c,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = C,(HL)
hexout(pc=011E,count=1,offset=0); called

src: 	ld	d,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,A
hexout(pc=011F,count=1,offset=0); called

src: 	ld	d,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,B
hexout(pc=0120,count=1,offset=0); called

src: 	ld	d,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,C
hexout(pc=0121,count=1,offset=0); called

src: 	ld	d,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,D
hexout(pc=0122,count=1,offset=0); called

src: 	ld	d,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,E
hexout(pc=0123,count=1,offset=0); called

src: 	ld	d,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,H
hexout(pc=0124,count=1,offset=0); called

src: 	ld	d,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = D,L
hexout(pc=0125,count=1,offset=0); called

src: 	ld	d,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = D,(HL)
hexout(pc=0126,count=1,offset=0); called

src: 	ld	e,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,A
hexout(pc=0127,count=1,offset=0); called

src: 	ld	e,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,B
hexout(pc=0128,count=1,offset=0); called

src: 	ld	e,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,C
hexout(pc=0129,count=1,offset=0); called

src: 	ld	e,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,D
hexout(pc=012A,count=1,offset=0); called

src: 	ld	e,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,E
hexout(pc=012B,count=1,offset=0); called

src: 	ld	e,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,H
hexout(pc=012C,count=1,offset=0); called

src: 	ld	e,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = E,L
hexout(pc=012D,count=1,offset=0); called

src: 	ld	e,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = E,(HL)
hexout(pc=012E,count=1,offset=0); called

src: 	ld	h,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,A
hexout(pc=012F,count=1,offset=0); called

src: 	ld	h,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,B
hexout(pc=0130,count=1,offset=0); called

src: 	ld	h,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,C
hexout(pc=0131,count=1,offset=0); called

src: 	ld	h,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,D
hexout(pc=0132,count=1,offset=0); called

src: 	ld	h,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,E
hexout(pc=0133,count=1,offset=0); called

src: 	ld	h,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,H
hexout(pc=0134,count=1,offset=0); called

src: 	ld	h,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = H,L
hexout(pc=0135,count=1,offset=0); called

src: 	ld	h,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = H,(HL)
hexout(pc=0136,count=1,offset=0); called

src: 	ld	i,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = I,A
hexout(pc=0137,count=2,offset=0); called

src: 	ld	l,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,A
hexout(pc=0139,count=1,offset=0); called

src: 	ld	l,b
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,B
hexout(pc=013A,count=1,offset=0); called

src: 	ld	l,c
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,C
hexout(pc=013B,count=1,offset=0); called

src: 	ld	l,d
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,D
hexout(pc=013C,count=1,offset=0); called

src: 	ld	l,e
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,E
hexout(pc=013D,count=1,offset=0); called

src: 	ld	l,h
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,H
hexout(pc=013E,count=1,offset=0); called

src: 	ld	l,l
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = L,L
hexout(pc=013F,count=1,offset=0); called

src: 	ld	l,(hl)
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = L,(HL)
hexout(pc=0140,count=1,offset=0); called

src: 	ld	r,a
label[0] g_szOpcode[2] g_szParms[3] comments[0]
Processing LD g_szOpcode
szLDtemp = R,A
hexout(pc=0141,count=2,offset=0); called

src: 	ld	sp,hl
label[0] g_szOpcode[2] g_szParms[5] comments[0]
Processing LD g_szOpcode
szLDtemp = SP,HL
hexout(pc=0143,count=1,offset=0); called

src: 	ld	b,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = B,VALUE8
hexout(pc=0144,count=2,offset=0); called

src: 	ld	c,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = C,VALUE8
hexout(pc=0146,count=2,offset=0); called

src: 	ld	d,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = D,VALUE8
hexout(pc=0148,count=2,offset=0); called

src: 	ld	e,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = E,VALUE8
hexout(pc=014A,count=2,offset=0); called

src: 	ld	h,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = H,VALUE8
hexout(pc=014C,count=2,offset=0); called

src: 	ld	l,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = L,VALUE8
hexout(pc=014E,count=2,offset=0); called

src: 	ld	a,value8
label[0] g_szOpcode[2] g_szParms[8] comments[0]
Processing LD g_szOpcode
szLDtemp = A,VALUE8
hexout(pc=0150,count=2,offset=0); called

src: 	ld	(hl),b
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),B
hexout(pc=0152,count=1,offset=0); called

src: 	ld	(hl),c
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),C
hexout(pc=0153,count=1,offset=0); called

src: 	ld	(hl),d
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),D
hexout(pc=0154,count=1,offset=0); called

src: 	ld	(hl),e
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),E
hexout(pc=0155,count=1,offset=0); called

src: 	ld	(hl),h
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),H
hexout(pc=0156,count=1,offset=0); called

src: 	ld	(hl),l
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),L
hexout(pc=0157,count=1,offset=0); called

src: 	ld	(hl),a
label[0] g_szOpcode[2] g_szParms[6] comments[0]
Processing LD g_szOpcode
szLDtemp = (HL),A
proc ld (HL),A
hexout(pc=0158,count=1,offset=0); called

src: 	
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end	start
label[0] g_szOpcode[3] g_szParms[5] comments[0]
Processing END directive
hexout(pc=0159,count=2,offset=0); called
End of pass two
