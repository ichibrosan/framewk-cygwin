Start of pass one

src:         title   $Id: testmov.asm,v 1.2 2011/03/25 09:01:21 doug Exp $
label[0] g_szOpcode[5] g_szParms[53] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testmov.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	include	assemble.inc 
label[0] g_szOpcode[7] g_szParms[13] comments[0]
Processing INCLUDE directive

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	a,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	a,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	b,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	b,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	c,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	c,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	d,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	d,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	e,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	e,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	page
label[0] g_szOpcode[4] g_szParms[0] comments[0]
Processing PAGE directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	h,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	h,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	l,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	l,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	m,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 	mov	m,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end
label[0] g_szOpcode[3] g_szParms[0] comments[0]
Processing END directive
End of pass one
Start of pass two

src:         title   $Id: testmov.asm,v 1.2 2011/03/25 09:01:21 doug Exp $
label[0] g_szOpcode[5] g_szParms[53] comments[0]
Processing TITLE directive

src:         subttl  COPR 2011 Douglas Goodall
label[0] g_szOpcode[6] g_szParms[25] comments[0]
Processing SUBTTL directive

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; $Log: testmov.asm,v $
label[0] g_szOpcode[0] g_szParms[0] comments[23]

src: ; Revision 1.2  2011/03/25 09:01:21  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; *** empty log message ***
label[0] g_szOpcode[0] g_szParms[0] comments[27]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; Revision 1.1  2011/03/25 08:26:35  doug
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; Initial revision
label[0] g_szOpcode[0] g_szParms[0] comments[18]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src:         include gplstuff.inc
label[0] g_szOpcode[7] g_szParms[12] comments[0]
Processing INCLUDE directive

src: ; ------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[38]

src: ; This file is part of "Vintage Modern 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; Assembler Plus Tools (VMAPT)".
label[0] g_szOpcode[0] g_szParms[0] comments[32]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is free software: you can 
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ; redistribute it and/or modify it under 
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; the terms of  the GNU General Public 
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; License  as published by the Free
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; Software  Foundation, either version 3
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; of the License, or (at your option)  
label[0] g_szOpcode[0] g_szParms[0] comments[39]

src: ; any later version.
label[0] g_szOpcode[0] g_szParms[0] comments[20]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; VMAPT is distributed in the hope that it 
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; will be useful, but WITHOUT ANY WARRANTY;
label[0] g_szOpcode[0] g_szParms[0] comments[43]

src: ; without even the implied warranty of   
label[0] g_szOpcode[0] g_szParms[0] comments[41]

src: ; MERCHANTABILITY or FITNESS FOR A 
label[0] g_szOpcode[0] g_szParms[0] comments[35]

src: ; PARTICULAR PURPOSE. See the GNU General 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; Public License for more details.
label[0] g_szOpcode[0] g_szParms[0] comments[34]

src: ;
label[0] g_szOpcode[0] g_szParms[0] comments[1]

src: ; You  should have received a copy of the 
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: ; GNU General Public License along with 
label[0] g_szOpcode[0] g_szParms[0] comments[40]

src: ; VMAPT. If not,
label[0] g_szOpcode[0] g_szParms[0] comments[16]

src: ; see <http://www.gnu.org/licenses/>.
label[0] g_szOpcode[0] g_szParms[0] comments[37]

src: ; ----------------------------------------
label[0] g_szOpcode[0] g_szParms[0] comments[42]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	include	assemble.inc 
label[0] g_szOpcode[7] g_szParms[13] comments[0]
Processing INCLUDE directive

src: 	proc	8085
label[0] g_szOpcode[4] g_szParms[4] comments[0]
Processing PROC directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	a,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0000,count=1,offset=0); called

src: 	mov	a,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0001,count=1,offset=0); called

src: 	mov	a,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0002,count=1,offset=0); called

src: 	mov	a,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0003,count=1,offset=0); called

src: 	mov	a,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0004,count=1,offset=0); called

src: 	mov	a,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0005,count=1,offset=0); called

src: 	mov	a,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0006,count=1,offset=0); called

src: 	mov	a,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0007,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	b,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0008,count=1,offset=0); called

src: 	mov	b,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0009,count=1,offset=0); called

src: 	mov	b,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000A,count=1,offset=0); called

src: 	mov	b,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000B,count=1,offset=0); called

src: 	mov	b,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000C,count=1,offset=0); called

src: 	mov	b,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000D,count=1,offset=0); called

src: 	mov	b,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000E,count=1,offset=0); called

src: 	mov	b,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=000F,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	c,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0010,count=1,offset=0); called

src: 	mov	c,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0011,count=1,offset=0); called

src: 	mov	c,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0012,count=1,offset=0); called

src: 	mov	c,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0013,count=1,offset=0); called

src: 	mov	c,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0014,count=1,offset=0); called

src: 	mov	c,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0015,count=1,offset=0); called

src: 	mov	c,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0016,count=1,offset=0); called

src: 	mov	c,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0017,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	d,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0018,count=1,offset=0); called

src: 	mov	d,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0019,count=1,offset=0); called

src: 	mov	d,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001A,count=1,offset=0); called

src: 	mov	d,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001B,count=1,offset=0); called

src: 	mov	d,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001C,count=1,offset=0); called

src: 	mov	d,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001D,count=1,offset=0); called

src: 	mov	d,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001E,count=1,offset=0); called

src: 	mov	d,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=001F,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	e,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0020,count=1,offset=0); called

src: 	mov	e,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0021,count=1,offset=0); called

src: 	mov	e,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0022,count=1,offset=0); called

src: 	mov	e,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0023,count=1,offset=0); called

src: 	mov	e,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0024,count=1,offset=0); called

src: 	mov	e,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0025,count=1,offset=0); called

src: 	mov	e,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0026,count=1,offset=0); called

src: 	mov	e,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0027,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	page
label[0] g_szOpcode[4] g_szParms[0] comments[0]
Processing PAGE directive

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	h,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0028,count=1,offset=0); called

src: 	mov	h,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0029,count=1,offset=0); called

src: 	mov	h,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002A,count=1,offset=0); called

src: 	mov	h,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002B,count=1,offset=0); called

src: 	mov	h,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002C,count=1,offset=0); called

src: 	mov	h,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002D,count=1,offset=0); called

src: 	mov	h,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002E,count=1,offset=0); called

src: 	mov	h,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=002F,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	l,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0030,count=1,offset=0); called

src: 	mov	l,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0031,count=1,offset=0); called

src: 	mov	l,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0032,count=1,offset=0); called

src: 	mov	l,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0033,count=1,offset=0); called

src: 	mov	l,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0034,count=1,offset=0); called

src: 	mov	l,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0035,count=1,offset=0); called

src: 	mov	l,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0036,count=1,offset=0); called

src: 	mov	l,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0037,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	mov	m,a
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0038,count=1,offset=0); called

src: 	mov	m,b
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=0039,count=1,offset=0); called

src: 	mov	m,c
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003A,count=1,offset=0); called

src: 	mov	m,d
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003B,count=1,offset=0); called

src: 	mov	m,e
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003C,count=1,offset=0); called

src: 	mov	m,h
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003D,count=1,offset=0); called

src: 	mov	m,l
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003E,count=1,offset=0); called

src: 	mov	m,m
label[0] g_szOpcode[3] g_szParms[3] comments[0]
Processing 8085 MOV g_szOpcode
hexout(pc=003F,count=1,offset=0); called

src: 
label[0] g_szOpcode[0] g_szParms[0] comments[0]

src: 	end
label[0] g_szOpcode[3] g_szParms[0] comments[0]
Processing END directive
End of pass two
