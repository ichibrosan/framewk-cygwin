	radix decimal

	pagewidth 76
	pagelength 50

	title	Doug's assembler test file - testfile.asm
	subttl	Copyright (C) Douglas Goodall. All Rights Reserved.

	message	Compiling forth.asm with Doug's Assembler

	proc	8085

; start figforth

figrel	equ	1	; fig release #
figrev	equ	1	; fig revision #
usrver	equ	0	; user version #

	end

	radix	hex

abl	equ	20
acr	equ	0d
adot	equ	2e
bell	equ	7
bsin	equ	7f
bsout	equ	08
dle	equ	10
lf	equ	0a
ff	equ	0c

; memory allocation

em	equ	4000
nscr	equ	1
kbbuf	equ	80
us	equ	40
rts	equ	a0
co	equ	84
nbuf	equ	8
buf1	equ	3be0
initr0	equ	3ba0
inits0	equ	3b00

	radix	hex
	org	100

orig	nop
	jp	cld
	nop
	jp	wrm
	dsal	figrel
	dsal	figrev
	dsal	usrver
temp	equ	0e
	dsal	temp
temp	equ	7d1a
	dsa	temp

	radix	hex
	org	12a
temp	equ	0
	dsa	temp

tnext	lxi	h,bip
	mov	a,m
	cmp	c
	jnz	tnext1
	inx	h
	mov	a,m
	cmp	b
	jnz	tnext1
break	nop
	nop
	nop
tnext1	ldax	b
	inx	b
	mov	l,a
	jmp	next+3

dpush	push	d
hpush	push	h
next	ldax	b
	inx	b
	mov	l,a
	ldax	b
	inx	b
	mov	h,a
next1	mov	e,m
	inx	h
	mov	d,m
	xchg
	pchl
	page

zero	equ	0

	org	150
temp	equ	83
prev1	dsal	temp
	string LIT
	savestr4th
	dsa	zero
lit	dsa	lit2
lit2	ldax	b
	inx	b
	mov	l,a
	ldax	b
	inx	b
	mov	h,a
	jmp	hpush

	org	161
temp	equ	87
prev2	dsal	temp
	string	EXECUTE
	savestr4th
	dsa	prev1
exec	dsa	exec2
exec2	pop	h
	jmp	next1
	
	org	171
temp	equ	86
prev1	dsal	temp
	string	BRANCH	
	savestr4th
	dsa	prev2
bran	dsa	bran1
bran1	mov	h,b
	mov	l,c
	mov	e,m
	page
	inx	h
	mov	d,m
	dcx	h
	dad	d
	mov	c,l
	mov	b,h
	jmp	next

	org	188
temp	equ	87
	dsal	temp
	string	0BRANCH
	savestr4th
	dsa	prev1
zbran	dsa	zbran2
zbran2	pop	h
	mov	a,l
	ora	h
	jz	bran1
	inx	b
	inx	b
	jmp	next

	org	19f
temp	equ	86
prev1	dsal	temp
	string	(LOOP)
	savestr4th
	dsa	prev2
	
	org	1e8
temp	equ	84
prev1	dsal	temp
	string	(DO)
	savestr4th
	dsa	prev2	
xloop	dsa	xloop2
xloop2	lxi	d,1
xloo1	lhld	rpp
	mov	a,m
	add	e
	mov	m,a
	mov	e,a
	inx	h
	mov	a,m
	adc	d
	mov	m,a
	inx	h
	inr	d
	dcr	d
	mov	d,a
	jm	xloo2
	mov	a,e
	sub	m
	mov	a,d
	sbb	m
	jmp	xloo3

xloo2	mov	a,m
	sub	e
	inx	h
	mov	a,h
	sbb	d

xloo3	jm	bran1
	inx	h
	shld	rpp
	inx	b
	inx	b
	jmp	next

	org	1d8
temp	equ	87	
	dsal	temp
	string	(+LOOP)
	savestr4th
prev1	dsa	prev1
xploo	dsa	xploo2
xploo2	pop	d
	jmp	xloo1

	org	1e8
temp	equ	84
prev2	dsal	temp
	string	(DO)
	savestr4th
	dsa	prev2
xdo	dsa	xdo2
xdo2	lhld	rpp
	dcx	h
	dcx	h
	dcx	h
	dcx	h
	shld	rpp
	pop	d
	mov	m,e
	inx	h
	mov	m,d
	pop	d
	inx	h
	mov	m,e
	inx	h
	mov	m,d
	jmp	next
				
	org	207
temp	equ	81
prev2	dsal	temp
	string	I
	dsa	prev1
ido	dsa	ido2
ido2	lhld	rpp
	mov	e,m
	inx	h

	org	217
temp	equ	85
prev1	dsal	temp
	string	DIGIT
	savestr4th
	dsa	prev2
digit	dsa	digit2
digit2	pop	h
	pop	d
	mov	a,e
temp	equ	30
	sui	temp
	jm	digi2
	
	org	292
temp	equ	87
prev2	dsal	temp
	string	ENCLOSE
	savestr4th
	dsa	prev1
encl	dsa	encl2
encl2	pop	d
	pop	h
	push	h
	mov	a,e
	mov	d,a
temp	equ	0ff
	mvi	e,temp
	dcx	h
encl	inx	h
	inr	e
	cmp	m
	jz	encl1

	org	2d9
temp	equ	84
prev1	dsal	temp
	string EMIT
	savestr4th
	dsa	prev2
emit	dsa	docol
	dsa	pemit
	dsa	one
	dsa	outt
	dsa	pstor
	dsa	semis

	org	2ec
temp	equ	83
prev2	dsal	temp
	string	KEY
	savestr4th
	dsa	prev1
key	dsa	key2
key2	jmp	pkey

	org	2f7
temp	equ	89
prev1	dsa	temp
	string	?TERMINAL
	savestr4th
	dsa	prev2	
qterm	dsa	qterm2
qterm2	jmp	pqter

	org	30b
temp	equ	82
prev2	dsa	temp
	string	CR
	savestr4th
	dsa	prev1
cr	dsa	cr2
cr2	jmp	pcr

	org	315
temp	equ	85
prev1	dsal	temp
	string	CMOVE
	savestr4th
	dsa	prev2
cmove	dsa	cmove2
cmove2	mov	l,c
	mov	h,b
	pop	b
	pop	d
	xthl
	jmp	cmov2
cmov1	mov	a,m
	inx	h
	stax	d
	inx	d
	dcx	b
cmov2	mov	a,b
	ora	c
	jnz	next

	org	335
temp	equ	82
	dsal	temp
	string	U*
	savestr4th
	dsa	prev1
ustar	dsa	ustar2
ustar2	pop	d
	pop	h
	push	b
	mov	b,h
	mov	a,l
	call	mpyx
	push	h
	mov	h,a
	mov	a,b
	mov	b,h
	call	mpyx
	pop	d
	mov	c,d
	dad	b
	aci	0
	mov	d,l
	mov	l,h
	mov	h,a
	pop	b
	pop	d
	jmp	hpush
	
mpyx	lxi	h,0
	mvi	c,8
mpyx1	dad	h
	ral
	jnc	mpyx2
	dad	d
	aci	0
mpyx2	dcr	c
	jnz	mpx1
	ret

	org	36a
temp	equ	82
	dsal	temp
	string	U/
	savestr4th
	dsa	prev2	
uslas	dsa	uslas2
uslas2	lxi	h,4
	dad	sp
	mov	e,m
	mov	m,c
	inx	h
	mov	d,m
	mov	m,b
	pop	b
	pop	h
	mov	a,l
	sub	c
	mov	a,h
	sbb	b
	jc	usla1
temp	eqy	0ffff
	lxi	h,temp
	lxi	d,temp
	jmp	usla7

usla1	mvi	a,16
usla2	dad	h
	ral
	xchg
	dad	h
	jnc	usla3
	inx	d
	ana	a
usla3	xchg
	rar
	push	psw
	jnc	usla4
	mov	a,l
	sub	c
	mov	l,a
	mov	a,h
	sbb	b
	mov	h,a
	jmp	usla5

usla4	mov	a,l
	sub	c
	mov	l,a
	mov	a,h
	sbb	b
	mov	h,a
	jnc	usla5
	dad	b
	dcx	d
usla5	inx	d
usla6	pop	psw
	dcr	a
	jnz	usla2
usla7	pop	b
	push	h
	push	d

	jmp	next

	org	3bd
temp	equ	83
	dsal	temp
	string	AND
	savestr4th
	dsa	prev2
andd	dsa	andd2
andd2	pop	d
	pop	h
	mov	a,e
	ana	l
	mov	l,a
	mov	a,d
	ana	h
	mov	h,a
	jmp	hpush

	org	3d0
temp	equ	82
	dsal	temp
	string	OR
	savestr4th
	dsa	prev1
orr	dsa	orr2
orr2	pop	d
	pop	h
	mov	a,e
	ora	l
	mov	l,a
	mov	a,d
	ora	h
	mov	h,a
	jmp	hpush

	org	3e2
temp	equ	83
	dsal	temp
	string	XOR
	savestr4th
	dsa	prev2
xorr	dsa	xorr2
xorr2	pop	d
	pop	h
	mov	a,e
	xra	l
	mov	l,a
	mov	a,d
	xra	h
	mov	h,a
	jmp	hpush

	org	3f5
temp	83
	dsal	temp
	string	SP@
	savestr4th
	dsa	prev1
spat	dsa	spat2
spat2	lxi	h,0
	dad	sp
	jmp	hpush

	org	404
temp	equ	83
	dsal	temp
	string	SP!
	savestr4th
	dsa	prev2
spsto	dsa	spsto2
spsto2	lhld	up
	lxi	d,6
	dad	d
	mov	e,m
	inx	h
	mov	d,m
	xchg
	sphl
	jmp	next

	org	41b
temp	equ	83
	dsal	temp
	string	RP@
	savestr4th
	dsa	prev1
rpat	dsa	rpat2
rpat2	lhld	rpp
	jmp	hpush

	org	429
temp	equ	83
	dsal	temp
	string	RP!
	savestr4th
	dsa	prev2
rpsto	dsa	rpsto2
rpsto2	lhld	up
	lxi	d,8
	dad	d
	mov	e,m
	inx	h
	mov	d,m
	xchg
	shld	rpp
	jmp	next




rpp	nop

; end figforth


